# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "CI/CD"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ "published" ]
jobs:
  test:
    name: Run Test Suite
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.0.2
      - name: Pull Docker images
        run: make pre-pull
      - name: Cache built Docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Run tests
        run: make test
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1.38
        if: always()
        with:
          files: junit/report.xml
  build-docker:
    name: Build Docker image
    runs-on: ubuntu-22.04
    concurrency:
      group: "docker_${{ github.event_name == 'pull_request' && format('pr_{0}', github.event.number) || format('ref_{0}', github.ref) }}"
      cancel-in-progress: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.0.2
      - name: Pull Docker images
        run: make pre-pull
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2.0.0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Built Docker Layers
        uses: satackey/action-docker-layer-caching@v0.0.11
      - name: Set Docker Metadata
        id: docker_metadata
        uses: docker/metadata-action@v4.0.1
        with:
          images: |
            ghcr.io/lutriseng/fleetbox-cloud
          tags: |
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.description=A deployable image for a Fleetbox Cloud production server
      - name: Generate version.txt and commit.txt
        run: make version.txt commit.txt
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3.0.0
        with:
          context: .
          # Sadly qemu is too slow to be productive, this would be good to revisit when there are native arm64 workers
          # though
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
  deploy-staging:
    if: github.ref == 'refs/heads/main'
    name: Deploy to Staging
    runs-on: ubuntu-22.04
    concurrency: deploy_staging
    environment:
      name: staging
      url: https://staging.fleetbox.io/
    needs:
      - test
      - build-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@67ddda2a87628f1aff28a54b8a708879ec62c80f
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull Docker Image
        run: "docker pull ghcr.io/lutriseng/fleetbox-cloud:sha-${{ github.sha }}"
      - name: Deploy to Fly.io
        run: "flyctl deploy --config fly.staging.toml --image ghcr.io/lutriseng/fleetbox-cloud:sha-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  deploy-production:
    if: github.event_name == 'release'
    name: Deploy to Production
    runs-on: ubuntu-22.04
    concurrency: deploy_production
    environment:
      name: production
      url: https://app.fleetbox.io/
    needs:
      - test
      - build-docker
      - deploy-staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@67ddda2a87628f1aff28a54b8a708879ec62c80f
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull Docker Image
        run: "docker pull ghcr.io/lutriseng/fleetbox-cloud:sha-${{ github.sha }}"
      - name: Deploy to Fly.io
        run: "flyctl deploy --config fly.toml --image ghcr.io/lutriseng/fleetbox-cloud:sha-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
